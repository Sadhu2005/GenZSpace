name: 🚀 Complete Automation Pipeline
## Cursor AI → GitHub → Firebase → Google Play Store → Your Phone

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      version-name: ${{ steps.version.outputs.version-name }}
      version-code: ${{ steps.version.outputs.version-code }}
      build-number: ${{ steps.version.outputs.build-number }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📊 Get version info
      id: version
      run: |
        # Extract version from pubspec.yaml
        VERSION_NAME=$(grep 'version:' pubspec.yaml | sed 's/version: //' | cut -d'+' -f1)
        VERSION_CODE=$(grep 'version:' pubspec.yaml | sed 's/version: //' | cut -d'+' -f2)
        BUILD_NUMBER=${VERSION_CODE:-1}
        
        echo "version-name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version-code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "build-number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        
        echo "📱 App Version: $VERSION_NAME"
        echo "🔢 Version Code: $VERSION_CODE"
        echo "🏗️ Build Number: $BUILD_NUMBER"
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔍 Analyze code
      run: flutter analyze --no-fatal-infos
      
    - name: 🧪 Run tests
      run: flutter test
      
    - name: 🏗️ Build APK
      run: flutter build apk --release
      
    - name: 🏗️ Build AAB (for Play Store)
      run: flutter build appbundle --release
      
    - name: 📤 Upload APK to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
        token: ${{ secrets.FIREBASE_TOKEN }}
        groups: testers
        file: build/app/outputs/flutter-apk/app-release.apk
        releaseNotes: |
          🚀 GenZSpace v${{ steps.version.outputs.version-name }}
          
          ✨ New Features:
          - Automatic updates via Google Play Store
          - Enhanced user experience
          - Bug fixes and improvements
          
          📱 Install and test the latest version!
          
    - name: 📱 Upload AAB to Google Play Store (Internal Testing)
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.anu.GenZSpace
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: internal
        status: completed
        releaseName: "GenZSpace v${{ steps.version.outputs.version-name }}"
        releaseNotes: |
          🚀 GenZSpace v${{ steps.version.outputs.version-name }}
          
          ✨ What's New:
          - Automatic updates via Google Play Store
          - Enhanced user experience
          - Bug fixes and performance improvements
          - New features and UI enhancements
          
          📱 This is an internal testing release. 
          You'll receive automatic update notifications on your phone!
          
    - name: 📧 Send notification email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "🚀 GenZSpace v${{ steps.version.outputs.version-name }} - Ready for Testing!"
        to: sadhuj2005@gmail.com
        from: GenZSpace CI/CD
        body: |
          🎉 Your GenZSpace app has been successfully built and deployed!
          
          📱 **App Version**: ${{ steps.version.outputs.version-name }}
          🔢 **Build Number**: ${{ steps.version.outputs.build-number }}
          📅 **Deployed**: $(date)
          
          🚀 **What's New:**
          - Automatic updates via Google Play Store
          - Enhanced user experience
          - Bug fixes and performance improvements
          
          📲 **How to Get Updates:**
          1. Check your phone for update notifications
          2. Or go to Google Play Store → My Apps → GenZSpace
          3. Tap "Update" to get the latest version
          
          🔗 **Testing Links:**
          - Firebase App Distribution: Check your email for APK download
          - Google Play Store: Internal testing track (automatic updates)
          
          🎯 **Next Steps:**
          - Test the app on your phone
          - Check for automatic update notifications
          - Provide feedback for improvements
          
          Happy testing! 🚀
          
    - name: 🎉 Success notification
      run: |
        echo "🎉 GenZSpace v${{ steps.version.outputs.version-name }} successfully deployed!"
        echo "📱 Check your phone for update notifications"
        echo "🔗 Firebase App Distribution: APK sent to your email"
        echo "🏪 Google Play Store: Internal testing track updated"
        echo "🚀 Your app is now live and ready for testing!"

  # Deploy to Production (only on main branch)
  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🏗️ Build AAB for Production
      run: flutter build appbundle --release
      
    - name: 🏪 Upload to Google Play Store (Production)
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.anu.GenZSpace
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: production
        status: completed
        releaseName: "GenZSpace v${{ needs.build-and-test.outputs.version-name }}"
        releaseNotes: |
          🚀 GenZSpace v${{ needs.build-and-test.outputs.version-name }}
          
          ✨ What's New:
          - Automatic updates via Google Play Store
          - Enhanced user experience
          - Bug fixes and performance improvements
          - New features and UI enhancements
          
          📱 This is a production release.
          All users will receive automatic update notifications!
          
    - name: 🎉 Production deployment success
      run: |
        echo "🎉 GenZSpace v${{ needs.build-and-test.outputs.version-name }} deployed to PRODUCTION!"
        echo "🏪 Google Play Store: Production track updated"
        echo "📱 All users will receive automatic updates"
        echo "🚀 Your app is now live for everyone!"
