name: 🚀 GenZSpace CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      version-name: ${{ steps.version.outputs.version-name }}
      version-code: ${{ steps.version.outputs.version-code }}
      build-number: ${{ steps.version.outputs.build-number }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📊 Get version info
      id: version
      run: |
        # Extract version from pubspec.yaml
        VERSION_NAME=$(grep 'version:' pubspec.yaml | sed 's/version: //' | cut -d'+' -f1)
        VERSION_CODE=$(grep 'version:' pubspec.yaml | sed 's/version: //' | cut -d'+' -f2)
        BUILD_NUMBER=${VERSION_CODE:-1}
        
        echo "version-name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version-code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "build-number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        
        echo "📱 Building version: $VERSION_NAME (build: $BUILD_NUMBER)"
        
    - name: 🧹 Clean build
      run: flutter clean
      
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🔍 Analyze code
      run: flutter analyze --no-fatal-infos
      
    - name: 🧪 Run tests
      run: flutter test
      continue-on-error: true
      
    - name: 🏗️ Build APK
      run: flutter build apk --release --build-name=${{ steps.version.outputs.version-name }} --build-number=${{ steps.version.outputs.build-number }}
      
    - name: 🏗️ Build App Bundle
      run: flutter build appbundle --release --build-name=${{ steps.version.outputs.version-name }} --build-number=${{ steps.version.outputs.build-number }}
      
    - name: 📤 Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: genzspace-apk-v${{ steps.version.outputs.version-name }}-b${{ steps.version.outputs.build-number }}
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30
        
    - name: 📤 Upload App Bundle as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: genzspace-aab-v${{ steps.version.outputs.version-name }}-b${{ steps.version.outputs.build-number }}
        path: build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

  # Distribute to Firebase App Distribution
  distribute:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📱 Download APK
      uses: actions/download-artifact@v4
      with:
        name: genzspace-apk-v${{ needs.build-and-test.outputs.version-name }}-b${{ needs.build-and-test.outputs.build-number }}
        path: ./build/app/outputs/flutter-apk/
        
    - name: 🚀 Distribute to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        token: ${{ secrets.FIREBASE_TOKEN }}
        groups: testers
        file: ./build/app/outputs/flutter-apk/app-release.apk
        releaseNotes: |
          🎉 New GenZSpace Update Available!
          
          📱 Version: ${{ needs.build-and-test.outputs.version-name }}
          🔢 Build: ${{ needs.build-and-test.outputs.build-number }}
          🌟 Branch: ${{ github.ref_name }}
          
          ✨ What's New:
          • Automatic app updates through Firebase App Distribution
          • Enhanced user experience with new features
          • Bug fixes and performance improvements
          
          🔄 This update will be automatically detected by the app!

  # Deploy to Google Play Store (Internal testing by default; runs on main/develop)
  deploy-playstore:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    # Run for:
    # - pushes to main/develop
    # - pull requests targeting main (for validation)
    # - tags starting with v*
    if: |
      startsWith(github.ref, 'refs/tags/v') ||
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/develop' ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'develop'))
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📱 Download App Bundle
      uses: actions/download-artifact@v4
      with:
        name: genzspace-aab-v${{ needs.build-and-test.outputs.version-name }}-b${{ needs.build-and-test.outputs.build-number }}
        path: ./build/app/outputs/bundle/release/
        
    - name: 🏪 Deploy to Google Play Store (Internal Testing)
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.anu.GenZSpace
        releaseFiles: ./build/app/outputs/bundle/release/app-release.aab
        track: internal
        status: completed
        inAppUpdatePriority: 2

  # Notification Job
  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, distribute, deploy-playstore]
    if: always()
    
    steps:
    - name: 📢 Notify Build Status
      run: |
        echo "🎯 Build Summary:"
        echo "📱 Version: ${{ needs.build-and-test.outputs.version-name }}"
        echo "🔢 Build Number: ${{ needs.build-and-test.outputs.build-number }}"
        echo "🌿 Branch: ${{ github.ref_name }}"
        echo ""
        
        if [ "${{ needs.build-and-test.result }}" == "success" ]; then
          echo "✅ Build and Test: SUCCESS"
        else
          echo "❌ Build and Test: FAILED"
        fi
        
        if [ "${{ needs.distribute.result }}" == "success" ]; then
          echo "✅ Firebase Distribution: SUCCESS"
        elif [ "${{ needs.distribute.result }}" == "skipped" ]; then
          echo "⏭️ Firebase Distribution: SKIPPED"
        else
          echo "❌ Firebase Distribution: FAILED"
        fi
        
        if [ "${{ needs.deploy-playstore.result }}" == "success" ]; then
          echo "✅ Google Play Store: SUCCESS"
        elif [ "${{ needs.deploy-playstore.result }}" == "skipped" ]; then
          echo "⏭️ Google Play Store: SKIPPED"
        else
          echo "❌ Google Play Store: FAILED"
        fi